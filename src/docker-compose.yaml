version: "3"

services:
  # order:
  #   build:
  #     context: ./order
  #     dockerfile: Dockerfile
  #   ports:
  #     - "9090:9090"
  #   environment:
  #     - name=value
  #   depends_on:
  #     # - kafka
  #     # - zookeeper
  #     - mongo

  # supply:
  #   build:
  #     context: ./supply
  #     dockerfile: Dockerfile
  #   ports:
  #     - "9091:9091"
  #   environment:
  #      - name=value
  #   depends_on:
  #     - mysql

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   ports:
  #     - "2181:2181"
  #   volumes:
  #     - zookeeper-data:/var/lib/zookeeper/data
  #     - zookeeper-logs:/var/lib/zookeeper/log

  # monitor:
  #   build:
  #     context: ./monitor
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - elasticsearch
  #   environment:
  #     - name=value
  #   ports:
  #     - "5430:5430"

  # production:
  #   build:
  #     context: ./production
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   environment:
  #     - name=value
  #   ports:
  #     - "5431:5431"

  # mongo:
  #   image: mongo:latest
  #   environment:
  #     MONGO_DB: mongodatabase
  #     MONGO_USER: mongosql
  #     MONGO_PASSWORD: mongopassword
  #   ports:
  #     - "5433:5433"
  #   volumes:
  #     - mongo-data:/var/lib/mongo/data

  # elasticsearch:
  #   image: elasticsearch:latest
  #   environment:
  #     ELASTICSEARCH_DB: elasticsearchdatabase
  #     ELASTICSEARCH_USER: elasticsearchsql
  #     ELASTICSEARCH_PASSWORD: elasticsearchpassword
  #   ports:
  #     - "5434:5434"
  #   volumes:
  #     - elasticsearch-data:/var/lib/elasticsearch/data

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      DATABASE_URL: mysql://mysql:password@host.docker.internal:3306/numbers
      DB_USER: mysql
      DB_HOST: host.docker.internal
      DB_NAME: numbers
      DB_PASSWORD: password
      DB_PORT: "3306"
    depends_on:
      - mysql
    links:
      - mysql

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: numbers
      MYSQL_USER: mysql
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data:
  # mongo-data:
  # elasticsearch-data:
  # zookeeper-data:
  # zookeeper-logs:
  # kafka-data:
